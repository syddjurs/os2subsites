// |--------------------------------------------------------------------------
// | Bootstrap 3 masonry grid
// |--------------------------------------------------------------------------
// |
// | This file contains styles for the following:
// | - .bs3-masonry-item
// |

// --------------------------------------------------
// Responsive
// --------------------------------------------------

// Mobile
@media @media-query-mobile {

	// Create masonry grid
	.bs3-masonry-make-grid(xs);
}

// Tablet
@media @media-query-tablet {

	// Create masonry grid
	.bs3-masonry-make-grid(sm);
}

// Desktop
@media @media-query-desktop {

	// Create masonry grid
	.bs3-masonry-make-grid(md);
}

// Large desktop
@media @media-query-large-desktop {

	// Create masonry grid
	.bs3-masonry-make-grid(lg);
}

// --------------------------------------------------
// Mixins
// --------------------------------------------------

.bs3-masonry-grid-calc-column(@index, @class, @type) when (@type = width) and (@index > 0) {
	.col-@{class}-@{index} {
		&.bs3-masonry-item {
			width: (percentage((@index / @grid-columns)) - 0.001);
		}
	}
}
.bs3-masonry-grid-calc-column(@index, @class, @type) when (@type = push) and (@index > 0) {
	.col-@{class}-push-@{index} {
		&.bs3-masonry-item {
			left: (percentage((@index / @grid-columns)) - 0.001);
		}
	}
}
.bs3-masonry-grid-calc-column(@index, @class, @type) when (@type = push) and (@index = 0) {
	.col-@{class}-push-0 {
		left: auto;
	}
}
.bs3-masonry-grid-calc-column(@index, @class, @type) when (@type = pull) and (@index > 0) {
	.col-@{class}-pull-@{index} {
		&.bs3-masonry-item {
			right: (percentage((@index / @grid-columns)) - 0.001);
		}
	}
}
.bs3-masonry-grid-calc-column(@index, @class, @type) when (@type = pull) and (@index = 0) {
	.col-@{class}-pull-0 {
		right: auto;
	}
}
.bs3-masonry-grid-calc-column(@index, @class, @type) when (@type = offset) {
	.col-@{class}-offset-@{index} {
		&.bs3-masonry-item {
			margin-left: (percentage((@index / @grid-columns)) - 0.001);
		}
	}
}

// Basic looping in LESS
.bs3-masonry-grid-loop-columns(@index, @class, @type) when (@index >= 0) {
	.bs3-masonry-grid-calc-column(@index, @class, @type);
	// next iteration
	.bs3-masonry-grid-loop-columns((@index - 1), @class, @type);
}

// Create grid for specific class
.bs3-masonry-make-grid(@class) {
	.bs3-masonry-grid-loop-columns(@grid-columns, @class, width);
	.bs3-masonry-grid-loop-columns(@grid-columns, @class, pull);
	.bs3-masonry-grid-loop-columns(@grid-columns, @class, push);
	.bs3-masonry-grid-loop-columns(@grid-columns, @class, offset);
}
